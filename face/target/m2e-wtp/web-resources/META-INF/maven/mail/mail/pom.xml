<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>mail</groupId>
  <artifactId>mail</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>mail Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
		<!-- spring版本号 -->
		<spring.version>4.0.8.RELEASE</spring.version>
		
		<!-- mybatis版本号 -->
		<mybatis.version>3.3.0</mybatis.version>
		
		<!-- log4j日志文件管理包版本 -->
		<slf4j.version>1.7.7</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		
		<!-- 阿里数据源 -->
		<druid.version>1.0.11</druid.version>
		
		<!--commons-lang3  -->
		<commons-lang3.version>3.3.2</commons-lang3.version>
		
		<!--json版本号  -->
		<jackson.version>2.2.3</jackson.version>
		
		<!-- google java lib -->
		<guava.version>17.0</guava.version>
		<validator.version>5.2.4.Final</validator.version>
		
		<!-- cxf -->
		<cxf.version>3.1.6</cxf.version>
		
		<jdk.version>1.8</jdk.version>
		<tomcat.version>2.0</tomcat.version>
		<webserver.port>80</webserver.port>
		
		<!-- 解决maven编译时乱码问题 -->
 		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 		
	</properties>

	<!-- 依赖包 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<!-- 表示开发的时候引入，发布的时候不会加载此包 -->
			<scope>test</scope>
		</dependency>
		
		<!-- spring核心包 start-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring核心包 end-->
		
		<!-- mybatis核心包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!-- mybatis/spring包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- 导入java ee jar 包 -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
		</dependency>
		<!-- 导入Mysql数据库链接jar包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.30</version>
		</dependency>
	    
		<!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- JSTL标签类 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- 日志文件管理包 -->
		<!-- log start -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
			
		<!-- 格式化对象，方便输出日志 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- log end -->
		<!-- 上传组件包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- 用Apache codec 替换Sun内部API sun.misc.BASE64Encoder   -->
		<dependency>
		  <groupId>commons-codec</groupId>
		  <artifactId>commons-codec</artifactId>
		  <version>20041127.091804</version>
		</dependency>
		
		<!-- connection pool -->
		<dependency>
		     <groupId>com.alibaba</groupId>
		     <artifactId>druid</artifactId>
		     <version>${druid.version}</version>
		</dependency>
		
		<!--commons-lang3  -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		
		<!-- jackson json -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		
		<!-- google java lib -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${validator.version}</version>
		</dependency>
		
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>	
		
		<!--json-lib-->  
		<dependency>  
		    <groupId>net.sf.json-lib</groupId>  
		    <artifactId>json-lib</artifactId>  
		    <version>2.4</version>  
		    <classifier>jdk15</classifier>  
		</dependency>  
		<!--dom4j-->  
		<dependency>
		    <groupId>org.dom4j</groupId>
		    <artifactId>dom4j</artifactId>
		    <version>2.0.0</version>
		</dependency>

	    <dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
	    <dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.cxf</groupId>
		  <artifactId>cxf-rt-transports-http-jetty</artifactId>
		  <version>${cxf.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.cxf</groupId>
		  <artifactId>cxf-rt-rs-client</artifactId>
		  <version>${cxf.version}</version>
		</dependency>
		
		<!-- wadl描述文件依赖包 -->
		<dependency>
		  <groupId>org.apache.cxf</groupId>
		  <artifactId>cxf-rt-rs-service-description</artifactId>
		  <version>3.0.0-milestone1</version>
		</dependency>
		<!-- restful webservce json数据转换 -->
		<dependency>
           <groupId>com.fasterxml.jackson.jaxrs</groupId>
           <artifactId>jackson-jaxrs-json-provider</artifactId>
           <version>${jackson.version}</version>
        </dependency>
        <!-- restful webservice 依赖包  end-->

		<!-- quartz.jar -->
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz</artifactId>
		    <version>2.2.3</version>
		</dependency>
		
		 <!--xml 依赖包 -->
	    <dependency>
		  <groupId>com.thoughtworks.xstream</groupId>
		  <artifactId>xstream</artifactId>
		  <version>1.4.9</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-collections4</artifactId>
		    <version>4.0</version>
		</dependency>
			
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpclient</artifactId>  
		    <version>4.5.2</version>  
		</dependency>  
		  
		<dependency>  
		          <groupId>org.apache.httpcomponents</groupId>    
		          <artifactId>httpmime</artifactId>    
		          <version>4.5.2</version>    
		      </dependency>   
		        
		      <dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpcore</artifactId>  
		    <version>4.4.5</version>  
		</dependency>  
		  
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpasyncclient</artifactId>  
		    <version>4.1.2</version>  
		</dependency>  
			
		
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpclient</artifactId>  
		    <version>4.5.2</version>  
		</dependency>  
		  
		<dependency>  
		          <groupId>org.apache.httpcomponents</groupId>    
		          <artifactId>httpmime</artifactId>    
		          <version>4.5.2</version>    
		      </dependency>   
		        
		      <dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpcore</artifactId>  
		    <version>4.4.5</version>  
		</dependency>  
		  
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpasyncclient</artifactId>  
		    <version>4.1.2</version>  
		</dependency> 
		
		<dependency>
		    <groupId>net.lingala.zip4j</groupId>
		    <artifactId>zip4j</artifactId>
		    <version>1.3.2</version>
		</dependency> 
		
	</dependencies>
	
	<build>
		<finalName>mail</finalName>
		<plugins>
			<!-- 解决 sun.misc.BASE64Decoder是Sun的专用API，可能会在未来版本中删除 的错误 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>  
				<configuration>
					<source>1.8</source><!-- 源代码使用的开发版本 -->
					<target>1.8</target><!-- 需要生成的目标class文件的编译版本 -->
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					
					<encoding>UTF-8</encoding>  
					
					<!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
					<compilerArguments>  
			            <bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>  
			        </compilerArguments>  
				</configuration>
			</plugin>	
		</plugins>
		<!-- 编译时，将pom文件配置替换文件中参数配置 -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>	
	</build>
</project>
